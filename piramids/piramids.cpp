#include <iostream>

using namespace std;

// Проверка на корректность ввода целого неотрицательного числа
int intCheck(int integer) {
    while (cin.fail() || integer < 0) { // Пока ввод некорректен или число отрицательное
        cin.clear(); // Сбрасываем состояние ошибки потока
        cin.ignore(1000, '\n'); // Очищаем ввод
        cout << "Ошибка, вы должны ввести целое неотрицательное число." << endl << "Введите ещё раз: " << endl;
        cin >> integer; // Повторный ввод
    }
    return integer; // Возвращаем проверенное значение
}

// Функция вывода пробелов
void spaces(int symbols) {
    for (int i = 0; i < (symbols); i++) { // Повторяем указанное количество раз
        cout << " "; // Выводим пробел
    }
}

// Функция вывода звездочек
void stars(int symbols, char symbol) {
    for (int i = 0; i < symbols * 2 - 1; i++) { // Выводим количество символов, необходимое для текущей строки
        cout << symbol; // Вывод символа
    }
}

int main() {
    setlocale(LC_ALL, "RU"); // Установка локали для корректного вывода на русском языке

    // Запрос количества пирамидок
    cout << "Введите количество пирамидок: " << endl;
    unsigned int pyramides = 0; // Инициализация переменной для количества пирамидок
    cin >> pyramides; // Ввод от пользователя
    pyramides = intCheck(pyramides); // Проверка введённого значения
    pyramides++; // Увеличиваем количество на 1 (для корректного построения)

    // Запрос символа для построения
    cout << "Введите символ для заполнения: " << endl;
    char symbol{ '*' }; // Инициализация символа по умолчанию
    cin >> symbol; // Ввод от пользователя

    // Построение пирамидок
    for (int i = 0; i < pyramides; i++) { // Итерация по высоте пирамиды
        for (int j = 0; j < pyramides - 1; j++) { // Итерация по количеству пирамидок в строке
            spaces(pyramides - i); // Вывод пробелов перед пирамидой
            stars(i, symbol); // Вывод символов пирамиды
            spaces(pyramides - i); // Вывод пробелов после пирамиды
        }
        cout << endl; // Переход на новую строку
    }

    return 0; // Успешное завершение программы
}